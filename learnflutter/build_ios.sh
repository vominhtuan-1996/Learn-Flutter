#!/bin/bash
# Import c√°c bi·∫øn t·ª´ file external_config.sh
source $(pwd)/external_config.sh 
# M√†u s·∫Øc cho terminal
RESET="\033[0m"
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
PURPLE="\033[0;35m"
CYAN="\033[0;36m"
WHITE="\033[0;37m"
# Clear old ipa_path.txt if exist
rm -f ipa_path.txt
# ƒê·ªçc phi√™n b·∫£n t·ª´ pubspec.yaml
version_full=$(grep '^version: ' pubspec.yaml | sed 's/version: //')
version=$(echo $version_full | cut -d "+" -f 1)
# L·∫•y git hash hi·ªán t·∫°i v√† ch·ªâ l·∫•y 7 k√Ω t·ª± ƒë·∫ßu ti√™n
git_hash_full=$(git rev-parse HEAD)
git_hash=$(echo $git_hash_full | cut -c 1-7)
# H√†m log v·ªõi timestamp v√† k√Ω hi·ªáu
log() {
  local message="$1"
  local timestamp=$(date +"[%H:%M:%S]")
  echo -e "${timestamp} ${message}${RESET}"
}
# H√†m g·ª≠i th√¥ng b√°o qua Telegram
send_telegram_notification() {
  local message=$1
  curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
    -d chat_id=${TELEGRAM_CHAT_ID} \
    -d text="${message}" \
    -d parse_mode="Markdown"
}
# H√†m t·∫°o shortlink
create_short_link_tinyurl() {
  local long_url=$1
  short_link=$(curl -s "http://tinyurl.com/api-create.php?url=${long_url}")
  echo $short_link
}
# H√†m build IPA v√† ƒë·∫©y l√™n GitHub
build_and_push() {
  local scheme=$1
  local output=$2
  local provisioningProfile=$3
  local bundleID=$4
  local target_dir=$5
  local environmentGithub=$6
  log "${BLUE}üî® Building for ${scheme}...${RESET}"
  flutter build ios --flavor ${scheme} -t lib/main_${scheme}.dart
  log "${BLUE}‚úîÔ∏è  Building for ${scheme} done...${RESET}"
  cd ios
  log "${BLUE}üî® Building for ${scheme} file IPA...${RESET}"
  if fastlane build_ios scheme:"${scheme}" output:"${output}" provisioningProfile:"${provisioningProfile}" bundleID:"${bundleID}"; then
    log "${GREEN}‚úîÔ∏è  Building for ${scheme} file IPA done...${RESET}"
    ipa_path=$(cat ./ipa_path.txt)
    log "${YELLOW}üì¶ ƒê∆∞·ªùng d·∫´n IPA sau khi build l√†: $ipa_path${RESET}"
    log "${YELLOW}üîÑ Git hash hi·ªán t·∫°i l√†: $git_hash${RESET}"
    if [ -f "$ipa_path" ]; then
      log "${GREEN}üì§ Copying IPA file to GitHub directory...${RESET}"
      cp "$ipa_path" "${target_dir}/$output.ipa" # Thay ƒë·ªïi file IPA 
      cd "$target_dir"
      git pull
      git add .
      git commit -m "version $version, Git hash: $git_hash"
      git push origin main
      log "${GREEN}‚úîÔ∏è  File IPA ƒë√£ ƒë∆∞·ª£c ƒë·∫©y l√™n GitHub üéâ.${RESET}"
    # Link download file IPA release
      release_link=$(create_short_link_tinyurl "https://github.com/MobileTeamSU12/Mobimap_Install_mobimap/raw/main/IOS_RELEASE/MobiMap_v$version.ipa")
    # Link c√†i ƒë·∫∑t github c·ªßa team
      short_link="https://mobileteamsu12.github.io/flutter/$environmentGithub.html"
    # Link trang release
      short_link_release=$LINK_RELEASE
    # Format message
      notification=$(printf "Build completed successfullyüéâ.\nNew IPA file for version *%s*\nGit hash: *%s*\nB·∫£n c√†i ƒë·∫∑t ·ªü GitTeam: [%s](%s)\nDownLoad File IPA Release: [%s](%s)\nC√†i ƒë·∫∑t B·∫£n ch√≠nh th·ª©c: [%s](%s)" \
      "$version" "$git_hash" "$short_link" "$short_link" "$release_link" "$release_link" "$short_link_release" "$short_link_release")
      send_telegram_notification "$notification"
    else
      log "${RED}‚ùå Error: File IPA kh√¥ng t·ªìn t·∫°i t·∫°i ƒë∆∞·ªùng d·∫´n $ipa_path.${RESET}"
      send_telegram_notification "Build failed. File IPA kh√¥ng t·ªìn t·∫°i t·∫°i ƒë∆∞·ªùng d·∫´n $ipa_path."
    fi
  else
    log "${RED}‚ùå Error: Building for ${scheme} failed.${RESET}"
    send_telegram_notification "Build failed for scheme ${scheme}. Please check the logs for more details."
  fi
}
# Hi·ªÉn th·ªã popup v·ªõi danh s√°ch l·ª±a ch·ªçn
user_selection=$(zenity --list --title="Ch·ªçn m√¥i tr∆∞·ªùng Build IOS" --column="Environment" --column="Description" \
  "IOS_RELEASE" "B·∫£n ph√°t h√†nh ch√≠nh th·ª©c" \
  "FIXBUG" "S·ª≠a l·ªói kh·∫©n c·∫•p" \
  "UAT" "Ki·ªÉm th·ª≠" \
  "CSOC" "An ninh m·∫°ng" \
  "TEST" "Th·ª≠ nghi·ªám")
# Ki·ªÉm tra l·ª±a ch·ªçn ng∆∞·ªùi d√πng v√† ch·∫°y l·ªánh t∆∞∆°ng ·ª©ng
case "$user_selection" in
  "IOS_RELEASE")
    build_and_push "prod" "MobiMap_v${version}" "$Profile_PROD" "$BundelID_PROD" "$GITHUB_DIR_RELEASE" "index"
    ;;
  "FIXBUG")
    build_and_push "prod" "Mobimap_flutter_fix" "$Profile_PROD" "$BundelID_PROD" "$GITHUB_DIR" "index"
    ;;
  "UAT")
    build_and_push "stag" "Mobimap_flutter_uat" "c$Profile_STAG" "$BundelID_STAG" "$GITHUB_DIR" "uat" 
    ;;
  "CSOC")
    build_and_push "stag" "Mobimap_flutter_csoc" "$Profile_STAG" "$BundelID_STAG" "$GITHUB_DIR" "csoc"
    ;;
  "TEST")
    build_and_push "stag" "Mobimap_flutter_test" "$Profile_STAG" "$BundelID_STAG" "$GITHUB_DIR" "test"
    ;;
  *)
    log "${RED}‚ùå Error: L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.${RESET}"
    ;;
esac


